const path = require("path")

module.exports = {
  extends: ["plugin:react/recommended", "airbnb"],
  parser: "@typescript-eslint/parser",
  parserOptions: {
    ecmaVersion: "latest",
    sourceType: "module",
    ecmaFeatures: {
      jsx: true,
    },
  },
  env: {
    node: true,
    jest: true,
    browser: true,
  },
  plugins: ["react", "jsx-a11y", "react-hooks", "unused-imports"],
  rules: {
    "import/order": "off",
    "react/jsx-indent": [2, 2],
    "react/jsx-indent-props": [2, 2],
    "unused-imports/no-unused-imports": "error",
    "react/no-invalid-html-attribute": "warn",
    "react/jsx-filename-extension": [
      2,
      {
        extensions: [".js", ".jsx", ".tsx"],
      },
    ],
    camelcase: "off",
    "import/no-unresolved": "off",
    "import/prefer-default-export": "off",
    "no-unused-vars": "off",
    "react/require-default-props": "off",
    "comma-dangle": [
      "warn",
      {
        arrays: "always-multiline",
        objects: "always-multiline",
        imports: "always-multiline",
        exports: "always-multiline",
        functions: "never",
      },
    ],
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": "off",
    "react/function-component-definition": "off",
    "no-shadow": "off",
    "import/extensions": "off",
    "import/no-extraneous-dependencies": "off",
    "no-underscore-dangle": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error",
    "no-param-reassign": "warn",
    "react/jsx-no-bind": "warn",
    "react/no-array-index-key": "warn",
    "arrow-body-style": "off",
    "no-undef": "off",
    "react/no-unstable-nested-components": "warn",
    "react/button-has-type": "off",
    "object-curly-newline": "off",
    "operator-linebreak": [
      "error",
      "none",
      {
        overrides: {
          "=": "after",
          "?": "before",
          ":": "before",
          "&&": "after",
          "||": "after",
        },
      },
    ],
    "no-control-regex": 0,
    "react/jsx-max-props-per-line": ["error", { maximum: 5 }],
    "no-multiple-empty-lines": [2, { max: 1 }],
    "arrow-parens": ["error", "as-needed"],
    "linebreak-style": "off",
    "react/jsx-wrap-multilines": [
      "error",
      {
        declaration: "parens",
        assignment: "parens",
        return: "parens",
        arrow: "parens",
        condition: "ignore",
        logical: "ignore",
        prop: "ignore",
      },
    ],
    "max-len": [
      "error",
      {
        ignoreComments: true,
        code: 175,
      },
    ],
    semi: ["off"],
    quotes: ["error", "double"],
    indent: [
      2,
      2,
      {
        ignoredNodes: ["TemplateLiteral"],
        SwitchCase: 1,
      },
    ],
  },
}
